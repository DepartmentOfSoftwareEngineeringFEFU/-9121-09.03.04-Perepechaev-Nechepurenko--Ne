import React, { useState, useEffect, useContext } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { AuthContext } from '../context/AuthContext';
import '../styles.css';



  // Исходные данные (используются только при первом запуске, если нет данных в localStorage)
  const INITIAL_TABLES_DATA = {
   mainAbsorbers : [
    { material: 'Слушатели', '125': '0,33', '250': '0,41', '500': '0,44', '1000': '0,46', '2000': '0,46', '4000': '0,46', '6000': '0,47' },
    { material: 'Взрослый человек в аудитории', '125': '0,14', '250': '0,22', '500': '0,34', '1000': '0,45', '2000': '0,43', '4000': '0,4', '6000': '-' },
    { material: 'Слушатели на деревянных стульях', '125': '0,17', '250': '0,36', '500': '0,47', '1000': '0,52', '2000': '0,5', '4000': '0,46', '6000': '0,44' },
    { material: 'Зрители на мягком кресле', '125': '0,25', '250': '0,3', '500': '0,4', '1000': '0,45', '2000': '0,45', '4000': '0,4', '6000': '-' },
    { material: 'Зрители на жестком кресле', '125': '0,2', '250': '0,25', '500': '0,3', '1000': '0,35', '2000': '0,35', '4000': '0,35', '6000': '-' },
    { material: 'Музыканты с инструментами', '125': '0,4', '250': '0,85', '500': '1,15', '1000': '1,4', '2000': '1,3', '4000': '1,2', '6000': '-' },
    { material: 'Инструменты (симфонический оркестр)', '125': '0,23', '250': '0,26', '500': '0,26', '1000': '0,29', '2000': '0,33', '4000': '0,36', '6000': '-' },
    { material: 'Кресло деревянное', '125': '0,02', '250': '0,02', '500': '0,02', '1000': '0,04', '2000': '0,04', '4000': '0,03', '6000': '0,03' },
    { material: 'Кресло с обивкой сидения и спинки искусственной кожей', '125': '0,08', '250': '0,1', '500': '0,12', '1000': '0,1', '2000': '0,1', '4000': '0,08', '6000': '-' },
    { material: 'Кресло полумягкое, обитое тканью', '125': '0,08', '250': '0,1', '500': '0,15', '1000': '0,15', '2000': '0,2', '4000': '0,2', '6000': '-' },
    { material: 'Кресло обитое кожей', '125': '0,1', '250': '0,12', '500': '0,17', '1000': '0,17', '2000': '0,12', '4000': '0,1', '6000': '0,1' },
    { material: 'Кресло обитое бархатом', '125': '0,14', '250': '0,22', '500': '0,31', '1000': '0,4', '2000': '0,52', '4000': '0,6', '6000': '0,62' },
    { material: 'Кресло обитое кожей и поролоном', '125': '0,05', '250': '0,09', '500': '0,12', '1000': '0,13', '2000': '0,15', '4000': '0,16', '6000': '0,15' },
    { material: 'Кресло мягкое, обитое тканью с пористым заполнителем', '125': '0,15', '250': '0,2', '500': '0,2', '1000': '0,25', '2000': '0,3', '4000': '0,3', '6000': '-' },
    { material: 'Стул мягкий', '125': '0,05', '250': '0,09', '500': '0,12', '1000': '0,13', '2000': '0,15', '4000': '0,16', '6000': '0,15' },
    { material: 'Стул полумягкий', '125': '0,05', '250': '0,08', '500': '0,18', '1000': '0,15', '2000': '0,17', '4000': '0,15', '6000': '0,05' },
    { material: 'Стул жесткий', '125': '0,02', '250': '0,02', '500': '0,02', '1000': '0,02', '2000': '0,02', '4000': '0,02', '6000': '0,02' },
    { material: 'Стул венский', '125': '0,01', '250': '0,02', '500': '0,02', '1000': '0,02', '2000': '0,02', '4000': '0,02', '6000': '0,02' },
    { material: 'Публика на 1 м²', '125': '0,28', '250': '0,4', '500': '0,45', '1000': '0,49', '2000': '0,47', '4000': '0,45', '6000': '0,44' },
    { material: 'Два слушателя на 1 м²', '125': '0,25', '250': '0,44', '500': '0,78', '1000': '0,97', '2000': '1,0', '4000': '1,0', '6000': '1,0' },
    { material: 'Три слушателя на 1 м²', '125': '0,2', '250': '0,33', '500': '0,67', '1000': '0,84', '2000': '0,92', '4000': '0,97', '6000': '0,97' },
    { material: 'Пол деревянный', '125': '0,05', '250': '0,04', '500': '0,03', '1000': '0,03', '2000': '0,03', '4000': '0,03', '6000': '0,03' },
    { material: 'Паркет по асфальту', '125': '0,04', '250': '0,04', '500': '0,07', '1000': '0,06', '2000': '0,06', '4000': '0,07', '6000': '0,07' },
    { material: 'Паркет по деревянному основанию', '125': '0,1', '250': '0,1', '500': '0,1', '1000': '0,08', '2000': '0,06', '4000': '0,06', '6000': '-' },
    { material: 'Паркет на шпонках', '125': '0,2', '250': '0,15', '500': '0,12', '1000': '0,1', '2000': '0,08', '4000': '0,07', '6000': '0,07' },
    { material: 'Пол на деревянных балках', '125': '0,15', '250': '0,11', '500': '0,1', '1000': '0,07', '2000': '0,06', '4000': '0,07', '6000': '0,06' },
    { material: 'Резина 5,5 мм на полу', '125': '0,04', '250': '0,04', '500': '0,08', '1000': '0,12', '2000': '0,03', '4000': '0,1', '6000': '0,08' },
    { material: 'Релин', '125': '0,04', '250': '0,05', '500': '0,07', '1000': '0,07', '2000': '0,08', '4000': '0,08', '6000': '0,06' },
    { material: 'Линолеум на твёрдой основе', '125': '0,02', '250': '0,02', '500': '0,03', '1000': '0,03', '2000': '0,04', '4000': '0,04', '6000': '0,04' },
    { material: 'Стена оштукатуренная и окрашенная краской клеевой', '125': '0,02', '250': '0,02', '500': '0,02', '1000': '0,03', '2000': '0,04', '4000': '0,04', '6000': '0,04' },
    { material: 'Стена оштукатуренная известью с сеткой', '125': '0,04', '250': '0,05', '500': '0,06', '1000': '0,08', '2000': '0,04', '4000': '0,06', '6000': '0,06' },
    { material: 'Стена песочно-известковая', '125': '0,04', '250': '0,05', '500': '0,06', '1000': '0,09', '2000': '0,04', '4000': '0,06', '6000': '0,06' },
    { material: 'Обычная гипсовая штукатурка', '125': '0,04', '250': '0,04', '500': '0,04', '1000': '0,06', '2000': '0,06', '4000': '0,03', '6000': '0,07' },
    { material: 'Бетонная поверхность железнянная', '125': '0,01', '250': '0,01', '500': '0,01', '1000': '0,02', '2000': '0,02', '4000': '0,02', '6000': '0,02' },
  ],

  // Данные для второй таблицы
  porousAbsorbers : [
    { material: 'Минераловатные ПП-80', b: '-', '125': '0,08', '250': '0,3', '500': '0,64', '1000': '0,89', '2000': '0,95', '4000': '0,81', '6000': '0,73' },
    { material: 'Минераловатные ПП-80 (b=50)', b: '50', '125': '0,21', '250': '0,4', '500': '0,72', '1000': '0,98', '2000': '0,97', '4000': '0,79', '6000': '0,75' },
    { material: '«Стилит»', b: '-', '125': '0,43', '250': '0,98', '500': '0,89', '1000': '0,99', '2000': '0,95', '4000': '0,87', '6000': '0,75' },
    { material: 'Древесно-волокнистые (b=50)', b: '50', '125': '0,22', '250': '0,3', '500': '0,34', '1000': '0,32', '2000': '0,41', '4000': '0,42', '6000': '0,42' },
    { material: 'Древесно-волокнистые', b: '-', '125': '0,22', '250': '0,3', '500': '0,34', '1000': '0,32', '2000': '0,41', '4000': '0,42', '6000': '0,42' },
    { material: 'Древесно-волокнистые, 25 мм', b: '-', '125': '0,18', '250': '0,11', '500': '0,19', '1000': '0,39', '2000': '0,95', '4000': '0,56', '6000': '-' },
    { material: 'Акустический «Фиб-ролит» 5 мм', b: '-', '125': '0,06', '250': '0,16', '500': '0,25', '1000': '0,38', '2000': '0,59', '4000': '0,63', '6000': '0,59' },
    { material: '«Фибролит» 30 мм', b: '-', '125': '0,06', '250': '0,16', '500': '0,25', '1000': '0,38', '2000': '0,59', '4000': '0,63', '6000': '0,59' },
    { material: '«Фибролит» 30 мм (b=150)', b: '150', '125': '0,13', '250': '0,42', '500': '0,53', '1000': '0,35', '2000': '0,53', '4000': '0,63', '6000': '0,56' },
    { material: 'Акустические ПА/Д', b: '-', '125': '0,05', '250': '0,59', '500': '0,52', '1000': '0,53', '2000': '0,25', '4000': '0,11', '6000': '0,08' },
    { material: 'Акустические ПА/Д (b=100)', b: '100', '125': '0,34', '250': '0,62', '500': '0,52', '1000': '0,52', '2000': '0,26', '4000': '0,15', '6000': '0,14' },
    { material: 'Акустические ПА/О', b: '-', '125': '0,01', '250': '0,17', '500': '0,68', '1000': '0,98', '2000': '0,86', '4000': '0,45', '6000': '0,28' },
    { material: 'Акустические ПА/О (b=100)', b: '100', '125': '0,2', '250': '0,52', '500': '0,98', '1000': '0,85', '2000': '0,8', '4000': '0,45', '6000': '0,28' },
    { material: 'Акустические ПА/С (b=100)', b: '100', '125': '0,18', '250': '0,64', '500': '0,99', '1000': '0,93', '2000': '0,9', '4000': '0,83', '6000': '0,76' },
    { material: 'Щит 800×500×240 мм', b: '-', '125': '0,39', '250': '0,58', '500': '0,89', '1000': '1,2', '2000': '1,28', '4000': '1,26', '6000': '1,33' },
    { material: 'Шестигранная призма 540×160 мм', b: '-', '125': '0,31', '250': '0,68', '500': '0,85', '1000': '1,01', '2000': '1,08', '4000': '0,95', '6000': '0,96' },
    { material: 'Плиты «Травертон»', b: '-', '125': '0,02', '250': '0,14', '500': '0,65', '1000': '0,9', '2000': '0,87', '4000': '0,86', '6000': '0,88' },
    { material: 'Плиты «Травертон» (b=100)', b: '100', '125': '0,28', '250': '0,81', '500': '0,86', '1000': '0,87', '2000': '0,89', '4000': '0,86', '6000': '0,88' },
    { material: 'Плиты «Акмигран» (b=100)', b: '100', '125': '0,29', '250': '0,7', '500': '0,68', '1000': '0,68', '2000': '0,75', '4000': '0,74', '6000': '0,7' },
    { material: 'Плиты «Брекчия» (b=50)', b: '50', '125': '0,33', '250': '0,44', '500': '0,69', '1000': '0,88', '2000': '0,92', '4000': '0,69', '6000': '0,66' },
    { material: '«Атимс» (b=50)', b: '50', '125': '0,08', '250': '0,26', '500': '0,64', '1000': '0,89', '2000': '0,75', '4000': '0,78', '6000': '0,8' },
    { material: 'АТМ 1 – 50 П', b: '-', '125': '0,36', '250': '0,76', '500': '0,98', '1000': '0,89', '2000': '0,88', '4000': '0,58', '6000': '0,47' },
    { material: 'Маты из минеральной ваты', b: '-', '125': '0,17', '250': '0,59', '500': '0,99', '1000': '0,98', '2000': '0,96', '4000': '0,87', '6000': '0,84' },
    { material: 'Тарная ткань в сборку (b=50)', b: '50', '125': '0,1', '250': '0,28', '500': '0,46', '1000': '0,6', '2000': '0,58', '4000': '0,6', '6000': '0,68' },
  ],

  // Данные для третьей таблицы
  membraneAbsorbers : [
     { material: 'Фанера на стилите', d: '100', b: '-', '125': '0,47', '250': '0,39', '500': '0,18', '1000': '0,14', '2000': '0,13', '4000': '0,12', '6000': '0,1' },
    { material: 'Древесно-стружечный', d: '-', b: '-', '125': '0,01', '250': '0,09', '500': '0,09', '1000': '0,08', '2000': '0,09', '4000': '0,14', '6000': '0,14' },
    { material: 'Древесно-стружечный (с пластиком)', d: '100', b: '-', '125': '0,34', '250': '0,28', '500': '0,22', '1000': '0,11', '2000': '0,11', '4000': '0,12', '6000': '0,14' },
    { material: 'Бумажно-слоистый', d: '150', b: '-', '125': '0,52', '250': '0,38', '500': '0,22', '1000': '0,14', '2000': '0,02', '4000': '-', '6000': '-' },
    { material: 'Дюралюминиевый', d: '50', b: '50', '125': '0,4', '250': '0,34', '500': '0,16', '1000': '0,08', '2000': '0,02', '4000': '-', '6000': '-' },
    { material: 'Плиты «Ацеид»', d: '-', b: '-', '125': '0,03', '250': '0,03', '500': '0,09', '1000': '0,08', '2000': '0,08', '4000': '0,03', '6000': '0,03' },
    { material: 'Плиты «Ацеид» (100мм)', d: '100', b: '-', '125': '0,38', '250': '0,28', '500': '0,21', '1000': '0,12', '2000': '0,05', '4000': '0,05', '6000': '0,04' },
    { material: 'Сухая штукатурка', d: '-', b: '-', '125': '0,02', '250': '0,05', '500': '0,06', '1000': '0,08', '2000': '0,05', '4000': '0.05', '6000': '-' },
    { material: 'Инсулит', d: '20', b: '-', '125': '0,15', '250': '0,18', '500': '0,29', '1000': '0,32', '2000': '0,29', '4000': '0,3', '6000': '-' },
    { material: 'Арболит', d: '20', b: '-', '125': '0,15', '250': '0,25', '500': '0,39', '1000': '0,42', '2000': '0,43', '4000': '0,42', '6000': '-' },
    { material: 'Пенопласт', d: '-', b: '-', '125': '0,02', '250': '0,09', '500': '0,19', '1000': '0,16', '2000': '0,14', '4000': '0,12', '6000': '0,12' },
    { material: 'Пенопласт (100мм)', d: '100', b: '-', '125': '0,51', '250': '0,38', '500': '0,28', '1000': '0,16', '2000': '0,16', '4000': '0,16', '6000': '0,16' },
    { material: 'Панели из «волнита(50 мм)', d: '50', b: '-', '125': '0,16', '250': '0,72', '500': '0,93', '1000': '0,20', '2000': '0,14', '4000': '0,02', '6000': '-' },
    { material: 'Панели из «волнита»', d: '50', b: '-', '125': '0,1', '250': '0,22', '500': '0,21', '1000': '0,08', '2000': '-', '4000': '-', '6000': '-' },
    { material: 'Плиты из пористой керамики', d: '30', b: '-', '125': '0,15', '250': '0,2', '500': '0,26', '1000': '0,5', '2000': '0,66', '4000': '0,57', '6000': '-' },
    { material: 'Деревянная панель', d: '50-100', b: '50', '125': '0,25', '250': '0,15', '500': '0,06', '1000': '0,05', '2000': '0,04', '4000': '-', '6000': '-' },
    { material: 'Деревянная обшивка (сосна)', d: '19', b: '-', '125': '0,1', '250': '0,1', '500': '0,1', '1000': '0,08', '2000': '0,08', '4000': '0,11', '6000': '-' },
    { material: 'Сухая гипсовая штукатурка', d: '-', b: '50', '125': '0,23', '250': '0,31', '500': '0,13', '1000': '0,09', '2000': '0,06', '4000': '0,13', '6000': '0,04' },
    { material: 'Сухая гипсовая штукатурка(100 мм)', d: '100', b: '-', '125': '0,65', '250': '0,34', '500': '0,23', '1000': '0,17', '2000': '0,17', '4000': '0,11', '6000': '0,10' },
    { material: 'Щиты Бекеши', d: '150', b: '-', '125': '0,76', '250': '0,67', '500': '0,50', '1000': '0,24', '2000': '0,13', '4000': '0,15', '6000': '0,07' },
    { material: 'Щиты Бекеши(150×100 мм)', d: '150', b: '100', '125': '0,70', '250': '0,86', '500': '0,50', '1000': '0,26', '2000': '0,12', '4000': '0,10', '6000': '0,09' },
    { material: 'Полицилиндры', d: '-', b: '-', '125': '0,41', '250': '0,30', '500': '0,35', '1000': '0,16', '2000': '0,10', '4000': '0,14', '6000': '0,18' },
    { material: 'Полицилиндры(50 мм)', d: '50', b: '-', '125': '0,51', '250': '0,44', '500': '0,39', '1000': '0,19', '2000': '0,13', '4000': '0,22', '6000': '0,28' },
  ]
};
// 2. Сервис для работы с localStorage
const storageService = {
  get: (key) => {
    try {
      const data = localStorage.getItem(key);
      return data ? JSON.parse(data) : null;
    } catch (error) {
      console.error('Ошибка чтения из localStorage:', error);
      return null;
    }
  },
  set: (key, value) => {
    try {
      localStorage.setItem(key, JSON.stringify(value));
    } catch (error) {
      console.error('Ошибка записи в localStorage:', error);
    }
  }
};

export default function AbsorptionTable() {
  const { user, isAdmin, logout } = useContext(AuthContext);
  const navigate = useNavigate();
  const [searchTerm, setSearchTerm] = useState('');
  const [activeTable, setActiveTable] = useState('mainAbsorbers');
  const [editingRow, setEditingRow] = useState(null);
  const [editForm, setEditForm] = useState({});
  const [tables, setTables] = useState(INITIAL_TABLES_DATA);
  const [isLoaded, setIsLoaded] = useState(false);

  // Автоматическое перенаправление администратора
  useEffect(() => {
    if (isAdmin() && window.location.pathname === '/') {
      navigate('/справочник');
    }
  }, [isAdmin, navigate]);

  // Загрузка данных
  useEffect(() => {
    const savedTables = storageService.get('absorptionTables');
    if (savedTables) {
      setTables(savedTables);
    }
    setIsLoaded(true);
  }, []);

  // Сохранение данных
  useEffect(() => {
    if (isLoaded) {
      storageService.set('absorptionTables', tables);
    }
  }, [tables, isLoaded]);

  const filterData = (data) => {
    if (!searchTerm) return data;
    return data.filter(item => 
      Object.values(item).some(val => 
        String(val).toLowerCase().includes(searchTerm.toLowerCase())
      )
    );
  };

  const filteredData = filterData(tables[activeTable]);

  const handleEdit = (row) => {
    setEditingRow(row.material);
    setEditForm({...row});
  };

  const handleSave = () => {
    const updatedTables = {
      ...tables,
      [activeTable]: tables[activeTable].map(item => 
        item.material === editingRow ? editForm : item
      )
    };
    setTables(updatedTables);
    setEditingRow(null);
  };

  const handleDelete = (material) => {
    const updatedTables = {
      ...tables,
      [activeTable]: tables[activeTable].filter(item => item.material !== material)
    };
    setTables(updatedTables);
  };

  const handleAdd = () => {
    const newRow = {
      material: `Новый материал ${Date.now().toString().slice(-4)}`,
      '125': '0', '250': '0', '500': '0', '1000': '0',
      '2000': '0', '4000': '0', '6000': '0'
    };
    
    if (activeTable === 'porousAbsorbers') newRow.b = '-';
    if (activeTable === 'membraneAbsorbers') {
      newRow.d = '-';
      newRow.b = '-';
    }

    const updatedTables = {
      ...tables,
      [activeTable]: [...tables[activeTable], newRow]
    };
    setTables(updatedTables);
    setEditingRow(newRow.material);
    setEditForm(newRow);
  };

  const handleLogout = () => {
    logout();
    navigate('/');
  };

  const renderCell = (key, value, row) => {
    if (editingRow === row.material) {
      return (
        <td key={key}>
          <input
            type="text"
            value={editForm[key] || ''}
            onChange={(e) => setEditForm({
              ...editForm,
              [key]: e.target.value
            })}
            className="edit-input"
          />
        </td>
      );
    }
    return <td key={key}>{value}</td>;
  };

  return (
    <div className="container">
      <header>
        <h1>Таблицы звукопоглощения материалов</h1>
        <div className="header-controls">
          {user && (
            <div className="user-actions">
              {isAdmin() ? (
                <>
                  <span className="welcome-text">Добро пожаловать, {user.username}!</span>
                  <button onClick={handleLogout} className="styled-button logout">
                    Выйти
                  </button>
                </>
              ) : (
                <Link to="/" className="styled-button home-link">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z"/>
                  </svg>
                  На главную
                </Link>
              )}
            </div>
          )}
          {isAdmin() && (
            <div className="admin-actions">
              <button onClick={handleAdd} className="styled-button add">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                </svg>
                Добавить материал
              </button>
            </div>
          )}
        </div>
      </header>

      <div className="table-tabs">
        <button
          onClick={() => setActiveTable('mainAbsorbers')}
          className={activeTable === 'mainAbsorbers' ? 'active' : ''}
        >
          Основные поглотители
        </button>
        <button
          onClick={() => setActiveTable('porousAbsorbers')}
          className={activeTable === 'porousAbsorbers' ? 'active' : ''}
        >
          Пористые поглотители
        </button>
        <button
          onClick={() => setActiveTable('membraneAbsorbers')}
          className={activeTable === 'membraneAbsorbers' ? 'active' : ''}
        >
          Мембранные поглотители
        </button>
      </div>

      <div className="search-container">
        <input
          type="text"
          placeholder="Поиск по материалам..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </div>

      {editingRow && (
        <div className="edit-controls">
          <button onClick={handleSave} className="save-button">
            Сохранить
          </button>
          <button 
            onClick={() => setEditingRow(null)} 
            className="cancel-button"
          >
            Отменить
          </button>
        </div>
      )}

      <div className="table-wrapper">
        <table>
          <thead>
            <tr>
              {filteredData.length > 0 && Object.keys(filteredData[0]).map(key => (
                <th key={key}>{key}</th>
              ))}
              {isAdmin() && <th>Действия</th>}
            </tr>
          </thead>
          <tbody>
            {filteredData.map((row) => (
              <tr key={row.material}>
                {Object.entries(row).map(([key, value]) => 
                  renderCell(key, value, row)
                )}
                {isAdmin() && (
                  <td className="actions">
                    {editingRow !== row.material && (
                      <>
                        <button 
                          onClick={() => handleEdit(row)}
                          className="edit-button"
                        >
                          ✏️
                        </button>
                        <button 
                          onClick={() => handleDelete(row.material)}
                          className="delete-button"
                        >
                          🗑️
                        </button>
                      </>
                    )}
                  </td>
                )}
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className="navigation-links">
        <Link to="/">На главную</Link>
        
      </div>

      <footer>
        <p>&copy; 2025 Справочник материалов</p>
      </footer>
    </div>
  );
}